<% include ../partials/header %>
    <script src="https://cdn.rawgit.com/harvesthq/chosen/gh-pages/chosen.jquery.min.js"></script>
    <link
      href="https://cdn.rawgit.com/harvesthq/chosen/gh-pages/chosen.min.css"
      rel="stylesheet"
    />

    <body
      class="vertical-layout vertical-menu-modern 2-columns navbar-floating footer-static"
      data-open="click"
      data-menu="vertical-menu-modern"
      data-col="2-columns"
    >


    <div class="content-body ">
      <!-- Data list view starts -->  
      <section id="documents-section">
        <div class="row">
          <div class="col-xl-12 col-lg-12 col-md-w12 col-sm-12 col-12">
            <div class="card d-flex">
              <div class="card-header border border-top-0 border-left-0 border-right-0">
                <h4 class="card-title pb-1">Documents</h4>
                <h2 class="content-header-title float-left mb-0">Candidate Name: <%= candidate.name %></h2>

              </div>
              <!-- <form method="post"> -->

              <div class="card-content">
                <div class="card-body" id="Documents-section">
                  <div class="col-xl-12 px-0">
                    <% const documentLabels = [
                    {
                      name: 'Photograph',
                      label: 'Photograph / फ़ोटोग्राफ़ '
                    },
                    {
                      name: 'AadharCardFront',
                      label: 'Aadhar Card/(Front Side) / आधार कार्ड (आगे की ओर) '
                    },
                    {
                      name: 'AadharCardBack',
                      label: 'Aadhar Card (Back Side) / आधार कार्ड (पीछे की ओर)'
                    },
                    {
                      name: 'ResidenceCertificate',
                      label: 'Residence Certificate / निवास प्रमाण पत्र'
                    },
                    {
                      name: 'CasteCertificate',
                      label: 'Caste Certificate / जाति प्रमाण पत्र '
                    },
                    {
                      name: 'RationCard',
                      label: 'Ration Card / राशन कार्ड '
                    },
                    {
                      name: '10thMarksheet',
                      label: '10th Marksheet / 10वीं कक्षा की मार्कशीट '
                    },
                    {
                      name: '12thMarksheet',
                      label: '12th Marksheet / 12वीं कक्षा की मार्कशीट '
                    },
                    {
                      name: 'DiplomaMarksheet',
                      label: 'Diploma Marksheet / डिप्लोमा मार्कशीट '
                    },
                    {
                      name: 'BachelorDegreeMarkSheets',
                      label: 'Bachelor Degree/Mark Sheets / स्नातक डिग्री/मार्कशीट '
                    },
                    {
                      name: 'DegreePassingCertificate',
                      label: 'Degree Passing Certificate (if applicable) / डिग्री पासिंग प्रमाण पत्र (यदि लागू हो)'
                    },
                    {
                      name: 'PassportNationalityCertificate',
                      label: 'Passport/Nationality Certificate / पासपोर्ट/नागरिकता प्रमाण पत्र '
                    },
                    {
                      name: 'MigrationCertificateTransferCertificate',
                      label: 'Migration Certificate/Transfer Certificate / प्रवास प्रमाण पत्र/स्थानांतरण प्रमाण पत्र '
                    },
                    {
                      name: 'GapCertificate',
                      label: 'Gap Certificate / अंतराल प्रमाण पत्र '
                    },
                    {
                      name: 'ProfessionalExperienceCertificate',
                      label: 'Professional Experience Certificate / पेशेवर अनुभव प्रमाण पत्र '
                    },
                    {
                      name:'Signature',
                      label:'Signature'
                    }
                  ]; %>
                  
              
                  <div class="row mb-1 documentrow">
                    <% documentLabels.forEach((element, i) => { %>
                      <div class="col-xl-6">
                        <label for="<%= element.name %><%= i %>">
                          <%= element.label %>
                          <% if (['Photograph', 'AadharCardFront', 'AadharCardBack', '10thMarksheet'].includes(element.name)) { %>
                            <span class="mandatory"> *</span>
                          <% } %>
                        </label>
                        

                        
                        <% if ( documents && documents[element.name]) { %> 
                          <div>
                            <a href="<%= process.env.MIPIE_BUCKET_URL + '/' + documents[element.name] %>" target="_blank">Uploaded <%= element.label %></a>
                            <i onclick="deletedata('<%=element.name%>','<%=documents._id%>')"  class="feather icon-x remove_uploaded_pic"
                            id="removelogo"></i>
                          <input type="hidden" class="form-control"name="<%= element.name %>" id="<%= element.name %>" value="<%documents[element.name]%>" />

                            </div>
                        <% } else { %>
                          <input type="file" id="<%= element.name %><%= i %>" class="form-control" onchange="uploadFile(event, '<%= element.name %>', '<%= i %>')">
                          <input type="hidden" name="<%= element.name %>" id="<%= element.name %>" value="">
                        <% } %>
                  
                      </div>
                    <% }); %>
                  </div>
                  
                    <div id="additional-documents">
                      <% const additionalDocumentLabels = [
                        {
                          name:'AdditionalDocuments',
                          label:'Additional Documents 1 / अतिरिक्त दस्तावेज 1'
                        }
                      ]; %>
                    
                    <div id="additional_doc" class="row mb-1 documentrow">
                        <% documents?.AdditionalDocuments?.forEach((element, i) => { %>
                          <%console.log(element,"this is the main data")%>
                          <div class="col-xl-6">    
                            <label>Additional Documents <%= i %>/ अतिरिक्त दस्तावेज <%= i %></label>
                            <% if (element) { %>
                              <div>
                                <a href="<%= process.env.MIPIE_BUCKET_URL + '/' + element %>" target="_blank">Uploaded <%= element.label %></a>
                                <i onclick="deletedata('<%= element %>', '<%= documents._id %>')" class="feather icon-x remove_uploaded_pic" id="removelogo"></i>
                                <input type="hidden" class="form-control additionaldocuments" name="<%= element %>" id="additional<%= i %>" value="<%= element %>" />
                              </div>
                            <% } else { %>
                              <input type="file" class="form-control" value="" onchange="uploadFile(event, 'additional<%= i %>', '<%= i %>')">
                              <input type="hidden" class="additionaldocuments">
                            <% } %>
                          </div>
                        <% }); %>
                          
                    </div>

                        </div>
                    
                    <a class="btn btn-success text-white" id="add-document-button" onclick="addDocumentRow()">Add Document</a>
                    
              
                    <div class="row">
                      <div class="col-xl-12 text-right">
                        <button type="reset" class="btn btn-danger waves-effect waves-light"
                          id="reset-button">Reset</button>
                        <button class="btn btn-success waves-effect waves-light text-white"
                          id="save-button" onclick="saveDocuments()">Save</button>
                      </div>
                    </div>
                    <div class="row">
                      <div class="col-xl-12">
                        <div id="msg" style="color:red; display:none;">
                        </div>
                      </div>
                    </div>

                  </div>
                </div>
              </div>

              <!-- </form> -->
            </div>
          </div>
        </div>
      </section>
    </div>
      <script>

    function addDocumentRow() {
      let newDocumentIndex = $('#additional_doc .col-xl-6').length; 
      let newDocumentRow = `
  <div class="col-xl-6 document-row" id="document-row-${newDocumentIndex}">
    <label>Additional Document ${newDocumentIndex + 1} / अतिरिक्त दस्तावेज ${newDocumentIndex+1}</label>
    <input type="file" id="AdditionalDocuments${newDocumentIndex}" class="form-control" onchange="uploadFile(event, 'additional${newDocumentIndex}', '${newDocumentIndex}')">
    <input type="hidden" name="additional-document${newDocumentIndex}" id="additional${newDocumentIndex}" class="form-control additionaldocuments">
    <button type="button" class="btn btn-danger mt-1" onclick="removeDocumentRow(${newDocumentIndex})">Remove</button>
  </div>
`;
      $('#additional_doc').append(newDocumentRow); 
    }

    function removeDocumentRow(index) {
      $(`#document-row-${index}`).remove(); 
    }
        const checkImageValidation = (file) => {
                let regex = /(\.docx|\.doc|\.pdf|\.jpg|\.jpeg|\.png)$/i
                  if (!regex.exec(file)) {
                    return false;
                  } else {
                    return true;
                  }
                }

                const checkImageSize = (size) => {
                  let finalSize = ((size / 1024) / 1024);
                  if (finalSize > 2) {
                    return false
                  }
                  return true;
                }
    function uploadFile(e, section, id){
      let index = e.target.id.slice(-1)
                  let file = e.target.files[0];
                  let size = file.size;
                  let body = {
                    file: file
                  }
                  let saveButton = document.getElementById('save-button');
                  // let inputField = $(`${section}${id}`) //document.getElementById(`${section}${+id}`);
                  let type = file.name;
                  header = { headers: { 'x-auth': localStorage.getItem('token'), "Content-Type": "multipart/form-data" } }
                  if (checkImageValidation(type) === false && checkImageSize(size) === false) {
                      alert("upload the image in jpg,jpeg or png format and should be less than 2MB");
                      // inputField = ''
                      $(`#${section}${id}`).val('')
                    } else if (checkImageValidation(type) === false && checkImageSize(size) === true) {
                      alert("upload the image in jpg,jpeg or png format");
                      // inputField.value = ''
                      $(`#${section}${id}`).val('')
                    } else if (checkImageValidation(type) === true && checkImageSize(size) === false) {
                      alert("uploaded image should be less than 2MB");
                      // inputField.value = ''
                      $(`#${section}${id}`).val('')
                    } else {
                      axios.post('/api/uploadSingleFile', body, header)
                        .then(result => {
                            // document.getElementById(`${section}`).value = result.data.data.Key;
                            $(`#${section}`).val(result.data.data.Key)

                          
                        })
                    }
    }


    function saveDocuments() {  
    let documentsData = {AdditionalDocuments:[]};
    
    const documentLabels = [
        'Photograph',
        'AadharCardFront',
        'AadharCardBack',
        'ResidenceCertificate',
        'CasteCertificate',
        'RationCard',
        '10thMarksheet',
        '12thMarksheet',
        'DiplomaMarksheet',
        'BachelorDegreeMarkSheets',
        'DegreePassingCertificate',
        'PassportNationalityCertificate',
        'MigrationCertificateTransferCertificate',
        'GapCertificate',
        'ProfessionalExperienceCertificate',
        'Signature'
    ];

    documentLabels.forEach(label => {
        const inputValue = document.getElementById(label)?.value;
        if (inputValue) {
            documentsData[label] = inputValue;
        }
    });
console.log(documentsData,"this is documents datra..,,<< from html fole")
    

    $('#additional_doc .col-xl-6').each(function () {
      console.log("checking>>>>>>><<<<<<<<<<<")
                  let hidden = $(this).find('input.additionaldocuments')
                  console.log("checking 2>> >>>>>>>>><<<<<<<<<",hidden)
                  let val = $(hidden).val()
                  if(val){
                    documentsData['AdditionalDocuments'].push(val)
                  }
                })

    


    header = { headers: { 'x-auth': localStorage.getItem('token') } }

    axios.post('/candidate/document', documentsData,header)
        .then(response => {
          location.reload();  
          if(response.data.success){
            $('#msg').show();
            $('#msg').text(response.data.message);
          }

        })
        .catch(error => {
            console.error("There was an error saving the documents:", error);
            alert("An error occurred while saving the documents.");
        });
}
function deletedata(documentName,id) {
    const confirmation = confirm("Are you sure you want to delete this document?");
    
    if (confirmation) {
        const header = { headers: { 'x-auth': localStorage.getItem('token') } };
        
        axios.delete(`/admin/candidate/candidatedoc`, {
            headers: header.headers,
            params: { documentName,id } 
        })
        .then(response => {
            location.reload();
            if (response.data.success) {
              $('#msg').show();
              $('#msg').text(response.data.message);

            }
        })
        .catch(error => {
            console.error("There was an error deleting the document:", error);
            alert("An error occurred while deleting the document.");
        });
    }
}


  

        
      </script>
			<% include ../partials/footer %>
